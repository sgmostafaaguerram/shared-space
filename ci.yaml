name: '[2- Deploy] Continuous Deployment phase to deploy the image to the Kubernetes cluster'

on:
  workflow_dispatch:
    inputs:
      tagVersion:
        description: 'Tag version to be used for the image'
        required: true
      environment:
        type: choice
        description: 'Environment to deploy the image'
        required: true
        options:
          - homologation
          - production

jobs:
  build:
    runs-on: [ self-hosted, linux ]
    env:
      APPLICATION_NAME: ${{ vars.APPLICATION_NAME }}
      TAG_VERSION: ${{ github.event.inputs.tagVersion }}
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tagVersion }}

      - name: install kubectl
        uses: SGitHubActions/setup-tools@stable
        with:
          tool-kind: 'kubectl'
          distribution: 'kubectl'
          tool-version: '1.24.6'

      - name: Setup kube config for homologation
        if: env.ENVIRONMENT == 'homologation'
        uses: SGitHubActions/sgcp-kube-config@stable
        with:
          cluster-url: kube9-dev.fr.world.socgen
          service-account-name: ${{ secrets.HOM_DOCKER_USERNAME }}
          service-account-password: ${{ secrets.HOM_DOCKER_PASSWORD }}
        env:
          NAMESPACE: ns-${{ vars.HOM_DTR_WORKSPACE }}
          DTR_URL: ${{ vars.HOM_DTR_URL }}
          DTR_WORKSPACE: ${{ vars.HOM_DTR_WORKSPACE }}

      - name: Setup kube config for production
        if: env.ENVIRONMENT == 'production'
        uses: SGitHubActions/sgcp-kube-config@stable
        with:
          cluster-url: kube9-prod.fr.world.socgen # Update this to your production cluster URL
          service-account-name: ${{ secrets.PROD_DOCKER_USERNAME }} # Update this to your production secrets
          service-account-password: ${{ secrets.PROD_DOCKER_PASSWORD }} # Update this to your production secrets
        env:
          NAMESPACE: ns-${{ vars.PROD_DTR_WORKSPACE }} # Update this to your production workspace
          DTR_URL: ${{ vars.PROD_DTR_URL }} # Update this to your production DTR URL
          DTR_WORKSPACE: ${{ vars.PROD_DTR_WORKSPACE }} # Update this to your production DTR workspace

      - name: Deploy to environment
        run: |
          kubectl delete deployment --ignore-not-found=true $APPLICATION_NAME-deployment --namespace ${{ env.NAMESPACE }}
          kubectl apply -f ./acid/K8S/configMaps/$ENVIRONMENT-application-properties-config-map.yaml --namespace ${{ env.NAMESPACE }}
          kubectl apply -f ./acid/K8S/configMaps/$ENVIRONMENT-filebeat-elastic-config-map.yaml --namespace ${{ env.NAMESPACE }}
          kubectl apply -f ./acid/K8S/configMaps/$ENVIRONMENT-filebeat-logstash-y-flux-config-map.yaml --namespace ${{ env.NAMESPACE }}
          sed -i 's/IMAGE_TAG/${{ env.TAG_VERSION }}/g' ./acid/K8S/deployments/$ENVIRONMENT-deployment.yaml
          kubectl apply -f ./acid/K8S/deployments/$ENVIRONMENT-deployment.yaml --namespace ${{ env.NAMESPACE }}
          kubectl apply -f ./acid/K8S/service.yaml --namespace ${{ env.NAMESPACE }}
          kubectl apply -f ./acid/K8S/ingress/$ENVIRONMENT-ingress.yaml --namespace ${{ env.NAMESPACE }}
          kubectl apply -f ./acid/K8S/hpa.yaml --namespace ${{ env.NAMESPACE }}
