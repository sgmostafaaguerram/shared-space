name: '[Auto] Validate Pull Request & Create tag'
on:
  pull_request:
    branches:
      - main

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: [ self-hosted, linux ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK and Maven
        uses: SGitHubActions/setup-java-maven@stable
        with:
          distribution: "temurin"
          jdk_version: "11.0.20+8"
          maven_version: "3.9.6"
          factory: "CFT"
      - name: Build and run test
        run: mvn -B package spring-boot:repackage -Dmaven.test.skip=false -s settings.xml

      - name: Determine New Tag
        id: new_tag
        run: |
          # Find the latest tag that starts with "3."
          LATEST_TAG=$(git tag -l "3.*" --sort=-version:refname | head -n 1)
          echo "Latest tag: $LATEST_TAG"

          # If no tag is found, start with "3.0.0"
          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="3.0.0"
          else
            # Increment the patch version
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
            NEW_TAG="$MAJOR.$MINOR.$((PATCH + 1))"
          fi
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Change application version in sonar-project.properties
        run: |
          sed -i "s/sonar.projectVersion=.*/sonar.projectVersion=${{ env.NEW_TAG }}/g" sonar-project.properties
          echo "New updated file:"
          cat sonar-project.properties

      - name: SonarQube Scan
        if: ${{ success() }}
        uses: SGitHubActions/sonar-scanner@stable
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_SECRET }}
        with:
          scanner-version: '4.3.0+2102'
          sonar-properties: 'sonar-project.properties'
          sonar-token: ${{ env.SONAR_TOKEN }}
